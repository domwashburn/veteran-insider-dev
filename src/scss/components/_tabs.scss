.tabs {
    &--horizontal {
      display: flex;
      flex-flow: row nowrap;
    }
    &__item {
        // transition: all 0.2s ease-out;
        position: relative;
        // cursor: pointer;
        // &:after {
        //   position: absolute;
        //   content: " ";
        //   display: block;
        // }
        .tabs--horizontal & {
            @extend .tabs__item;
            &:not(:last-child), .tabs__divider {
                margin-right: to-unit(25px, "rem");
            }
            // &:after {
            //     @extend .tabs__item:after;
            //     bottom: 0;
            //     height: 0;
            //     transition: all 0.2s $transition-snappy;
            //     width: 100%;
            // }
            // &.is-active:after,
            // &:hover:after {
            //     @extend .tabs__item:after;
            //     height: to-unit(4px, "rem");
            // }
            // .tabs--short &.is-active:after,
            // .tabs--short &:hover:after {
            //     @extend .tabs__item:after;
            //     height: to-unit(2px, "rem");
            // }
        }
        .tabs--vertical & {
            @extend .tabs__item;
            &:after {
                @extend .tabs__item:after;
                left: 0;
                top: 50%;
                transition: opacity 250ms $transition-snappy, height 200ms 100ms $transition-snappy;
                opacity: 0;
                height: 40%;
                width: to-unit(2px, "rem");
                transform: translateY(-50%);
            }
            &.is-active:after {
                @extend .tabs__item:after;
                transition: background-color 250ms $transition-snappy;
                height: 100%;
                opacity: 1;
                width: to-unit(5px, "rem");
            }
            &.is-active:hover:after {
            }
            &:hover:after {
                @extend .tabs__item:after;
                height: 100%;
                opacity: 1;
            }
        }
    }
    &__link {
        cursor: pointer;
        display: inline-flex;
        font-weight: 300;
        padding: to-unit(14px, "rem") to-unit(10px, "rem");
        position: relative;
        text-decoration: none;
        transition: all 0.2s ease-out;
        overflow-y: hidden;
        &:hover,
        &:active,
        &:focus {
            text-decoration: none;
        }
        // base styling for the underline below the tab text
        &:after {
          content: " ";
          display: block;
          position: absolute;
          left: 0;
        }
    }

    &--horizontal {
        .tabs__link {
            @extend .tabs__link;
            overflow-y: hidden;
            &:after {
                @extend .tabs__link:after;
                transform: translateY(2px);
                bottom: 0;
                height: to-unit(2px, "rem");
                transition: all 0.2s $transition-snappy;
                width: 100%;
            }
            &:hover:after {
                transform: translateY(0px);
                @extend .tabs__link:after;
            }
        }
        .is-active .tabs__link {
            &:after{
                @extend .tabs__link:after;
                height: to-unit(2px, "rem");
            }
        }
        // .tabs--short &.is-active:after,
        // .tabs--short &:hover:after {
        //     @extend .tabs__link:after;
        //     height: to-unit(2px, "rem");
        // }
    }
}

// ------------------------------------------------------------
//   Separating UI color themes from the layout and structure
//   of the components. This lives outside of the base
//   component because there's no & inherritance. The class
//   names referenced are created above and themed below. By
//   making the parent class the UI theme, it can be on any
//   element as long as it's a parent of the component.
// ------------------------------------------------------------

.light-ui, .light-ui.tabs {
    .tabs {
        background-color: palette("light-ui", "bg-light");
    }
    .tabs--vertical.tabs__item {
        &:after {
            background-color: palette("light-ui", "active");
        }
        &.is-active:after {
            // background-color: palette("light-ui", "focus");
            background-color: #DFE6EB;
        }
        &.is-active:hover:after {
            background-color: palette("light-ui", "text");
        }
        &:hover:after {
            background-color: palette("light-ui", "text");
        }
    }
    .is-inactive .tabs__link {
        color: palette("light-ui", "active");
        &:hover,
        &:active {
            color: palette("light-ui", "active");
        }
        &:focus {
            color: palette("light-ui", "focus");
        }
        &:after {
            background-color: palette("light-ui", "active");
        }
        &:hover:after {
            background-color: palette("light-ui", "active");
        }
        &:focus:after {
            background-color: palette("light-ui", "focus");
        }
    }
    .is-active .tabs__link {
        color: palette("light-ui", "text");
        &:hover {
            color: palette("light-ui", "active");
        }
        &:active,
        &:focus {
            color: palette("light-ui", "focus");
        }
        &:after {
            background-color: palette("light-ui", "text");
        }
        &:hover:after {
            background-color: palette("light-ui", "active");
        }
        &:focus:after {
            background-color: palette("light-ui", "focus");
        }
    }
}

.dark-ui, .dark-ui.tabs {
    .tabs {
        background-color: palette("dark-ui", "bg-dark");
    }
    .tabs--vertical.tabs__item {
        &:after {
            background-color: palette("dark-ui", "active");
        }
        &.is-active:after {
            // background-color: palette("dark-ui", "focus");
            background-color: #DFE6EB;
        }
        &.is-active:hover:after {
            background-color: palette("dark-ui", "text");
        }
        &:hover:after {
            background-color: palette("dark-ui", "text");
        }
    }
    .is-active .tabs__link {
        color: palette("dark-ui", "active");
        &:hover,
        &:active,
        &:focus {
            color: palette("dark-ui", "focus");
        }
        &:after {
            background-color: palette("dark-ui", "active");
        }
        &:hover:after {
            background-color: palette("dark-ui", "focus");
        }
    }
    .is-inactive .tabs__link {
        color: palette("dark-ui", "text");
        &:hover {
            color: palette("dark-ui", "active");
        }
        &:active,
        &:focus {
            color: palette("dark-ui", "focus");
        }
        &:after {
            background-color: palette("dark-ui", "text");
        }
        &:hover:after {
            background-color: palette("dark-ui", "active");
        }
    }
}
